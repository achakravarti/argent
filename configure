#!/bin/sh


ok() {
	printf "[\033[0;32mOK\033[0m]   $1\n"
}


warn() {
	printf "[\033[0;33mWARN\033[0m] $1\n"
}


fail() {
	printf "[\033[0;31mFAIL\033[0m] $1\n"
	exit
}


exists() {
	if [ $SHELL = "/bin/csh" ] ; then
		if which $1 1>/dev/null 2>/dev/null ; then
			return 0
		else
			return 1
		fi
	else
		if which $1 >&/dev/null ; then
			return 0
		else
			return 1
		fi
	fi
}


depreq() {
	if [ $SHELL = "/bin/csh" ] ; then
		if which $1 1>/dev/null 2>/dev/null ; then
			ok "$1 found..."
		else
			fail "$1 not found; install $2 first."
		fi
	else
		if which $1 >&/dev/null ; then
			ok "$1 found..."
		else
			fail "$1 not found; install $2 first."
		fi
	fi
}


depopt() {
	if [ $SHELL = "/bin/csh" ] ; then
		if which $1 1>/dev/null 2>/dev/null ; then
			ok "$1 found..."
		else
			warn "$1 not found; $2 won't be available."
		fi
	else
		if which $1 >&/dev/null ; then
			ok "$1 found..."
		else
			warn "$1 not found; $2 won't be available."
		fi
	fi
}


copyright() {
	echo "Argent Library Copyright (C) 2021 Abhishek Chakravarti"
	echo "This program comes with ABSOLUTELY NO WARRANTY; for details see LICENSE."
	echo "This is free software, and you are welcome to redistribute it"
	echo "under certain conditions; see LICENSE for details."
	echo ""
}


check_os() {
	OS=`uname`
	if [ $OS = "Linux" ] ; then
		ok "GNU/Linux detected..."
	elif [ $OS = "FreeBSD" ] ; then
		ok "FreeBSD detected..."
	else
		error "Unsupported OS; use FreeBSD or a Linux distro."
	fi
}


check_make() {
	exists make

	if [ "$?" -ne "0" ] ; then
		error "make not available; install it first."
	else
		ok "make found."
	fi
}


check_compiler() {
	[ $OS = "Linux" ] && CC=gcc || CC=clang
	depreq $CC $CC
}


copyright
echo "Starting Argent build configuration..."
check_os
check_make
check_compiler
#depreq cc "gcc or clang"
depreq psql "postgresql"
depopt ccache "compilation caching"
depopt valgrind "make check"
depopt gcovr "make coverage"

